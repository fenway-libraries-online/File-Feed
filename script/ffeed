#!/usr/bin/perl

use strict;
use warnings;

use File::Feed;
use File::Kvpar;
use Getopt::Std;

usage() if !@ARGV;

my $cmd = shift;
my $code = __PACKAGE__->can("cmd_$cmd") or usage();
$code->();

sub cmd_fill {
    my %opt;
    getopts('mv', \%opt);
    usage() if @ARGV < 1;
    my $feed = File::Feed->new(shift @ARGV);
    my @new = $feed->fill(@ARGV);
    if ($opt{'m'}) {
        File::Kvpar->new(\*STDOUT)->write(@new);
    }
    elsif ($opt{'v'}) {
        printf "%s <= %s\n", $_->to, $_->from for @new;
    }
    else {
        print $_->to, "\n" for @new;
    }
}

sub cmd_new {
    my $feed = File::Feed->new(shift @ARGV);
    my @new = $feed->new_files;
    print $_->path, "\n" for @new;
}

sub cmd_drain {
    my %opt;
    getopts('nv', \%opt);
    usage() if @ARGV != 2;
    my $feed = File::Feed->new(shift @ARGV);
    $feed->drain(@ARGV);
}

sub usage {
    print STDERR <<'EOS';
usage: ffeed COMMAND [ARG...]
commands:
    fill FEED [CHANNEL...]      Fill (a) feed(s) with new files
    drain FEED                  Process new files
EOS
    exit 1;
}
